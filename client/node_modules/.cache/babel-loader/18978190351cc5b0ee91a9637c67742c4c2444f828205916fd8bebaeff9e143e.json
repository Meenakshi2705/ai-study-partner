{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\ai-study-partner\\\\client\\\\src\\\\summarizer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Summarizer = () => {\n  _s();\n  const [text, setText] = useState('');\n  const [summary, setSummary] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleSummarize = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.post('http://localhost:5000/summarize', {\n        text\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      setSummary(response.data.summary);\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"Summarization failed. Check console for details.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"summarizer\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: text,\n      onChange: e => setText(e.target.value),\n      placeholder: \"Enter text to summarize (min 10 words)...\",\n      rows: 6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSummarize,\n      disabled: loading || text.split(' ').length < 10,\n      children: loading ? 'Summarizing...' : 'Summarize'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), summary && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Summary:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: summary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Summarizer, \"fwKBF+Wg8Wz5GPjQjWpc74pt9/c=\");\n_c = Summarizer;\nexport default Summarizer;\nvar _c;\n$RefreshReg$(_c, \"Summarizer\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Summarizer","_s","text","setText","summary","setSummary","loading","setLoading","handleSummarize","response","post","headers","data","error","console","alert","className","children","value","onChange","e","target","placeholder","rows","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","split","length","_c","$RefreshReg$"],"sources":["C:/Users/hp/ai-study-partner/client/src/summarizer.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Summarizer = () => {\r\n  const [text, setText] = useState('');\r\n  const [summary, setSummary] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSummarize = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.post(\r\n        'http://localhost:5000/summarize', \r\n        { text },\r\n        { headers: { 'Content-Type': 'application/json' } }\r\n      );\r\n      setSummary(response.data.summary);\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      alert(\"Summarization failed. Check console for details.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"summarizer\">\r\n      <textarea\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n        placeholder=\"Enter text to summarize (min 10 words)...\"\r\n        rows={6}\r\n      />\r\n      <button onClick={handleSummarize} disabled={loading || text.split(' ').length < 10}>\r\n        {loading ? 'Summarizing...' : 'Summarize'}\r\n      </button>\r\n      {summary && (\r\n        <div className=\"summary-result\">\r\n          <h3>Summary:</h3>\r\n          <p>{summary}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Summarizer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMY,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClCD,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAC/B,iCAAiC,EACjC;QAAER;MAAK,CAAC,EACR;QAAES,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB;MAAE,CACpD,CAAC;MACDN,UAAU,CAACI,QAAQ,CAACG,IAAI,CAACR,OAAO,CAAC;IACnC,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BE,KAAK,CAAC,kDAAkD,CAAC;IAC3D,CAAC,SAAS;MACRR,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACER,OAAA;IAAKiB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBlB,OAAA;MACEmB,KAAK,EAAEhB,IAAK;MACZiB,QAAQ,EAAGC,CAAC,IAAKjB,OAAO,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACzCI,WAAW,EAAC,2CAA2C;MACvDC,IAAI,EAAE;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF5B,OAAA;MAAQ6B,OAAO,EAAEpB,eAAgB;MAACqB,QAAQ,EAAEvB,OAAO,IAAIJ,IAAI,CAAC4B,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,GAAG,EAAG;MAAAd,QAAA,EAChFX,OAAO,GAAG,gBAAgB,GAAG;IAAW;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,EACRvB,OAAO,iBACNL,OAAA;MAAKiB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BlB,OAAA;QAAAkB,QAAA,EAAI;MAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjB5B,OAAA;QAAAkB,QAAA,EAAIb;MAAO;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAzCID,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AA2ChB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}