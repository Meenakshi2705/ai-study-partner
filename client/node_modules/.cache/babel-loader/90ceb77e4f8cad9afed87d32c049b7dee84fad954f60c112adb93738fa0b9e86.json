{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\ai-study-partner\\\\client\\\\src\\\\summarizer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Summarizer = () => {\n  _s();\n  const [text, setText] = useState('');\n  const [summary, setSummary] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [wordCount, setWordCount] = useState(0);\n  const handleTextChange = e => {\n    const newText = e.target.value;\n    setText(newText);\n    setWordCount(newText.trim() ? newText.trim().split(/\\s+/).length : 0);\n  };\n  const handleSummarize = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setSummary('');\n    try {\n      var _response$data;\n      if (!text.trim()) throw new Error('Please enter text to summarize');\n      if (wordCount < 10) throw new Error('Enter at least 10 words');\n      const response = await axios.post('/summarize', {\n        text\n      });\n      if (!((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.summary)) {\n        throw new Error('No summary received');\n      }\n      setSummary(response.data.summary);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      const errorMsg = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message || 'Failed to generate summary';\n      setError(errorMsg);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"summarizer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AI Study Partner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSummarize,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: 10,\n        value: text,\n        onChange: handleTextChange,\n        placeholder: \"Enter text to summarize (minimum 10 words)...\",\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word-count\",\n        children: [\"Words: \", wordCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading || wordCount < 10,\n        children: loading ? 'Summarizing...' : 'Summarize'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this), summary && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Summary:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: summary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Summarizer, \"8zUZU35Z/JMH4yeS+4bQ6JYvL3E=\");\n_c = Summarizer;\nexport default Summarizer;\nvar _c;\n$RefreshReg$(_c, \"Summarizer\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Summarizer","_s","text","setText","summary","setSummary","loading","setLoading","error","setError","wordCount","setWordCount","handleTextChange","e","newText","target","value","trim","split","length","handleSummarize","preventDefault","_response$data","Error","response","post","data","err","_err$response","_err$response$data","errorMsg","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","rows","onChange","placeholder","disabled","type","_c","$RefreshReg$"],"sources":["C:/Users/hp/ai-study-partner/client/src/summarizer.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nconst Summarizer = () => {\r\n  const [text, setText] = useState('');\r\n  const [summary, setSummary] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [wordCount, setWordCount] = useState(0);\r\n\r\n  const handleTextChange = (e) => {\r\n    const newText = e.target.value;\r\n    setText(newText);\r\n    setWordCount(newText.trim() ? newText.trim().split(/\\s+/).length : 0);\r\n  };\r\n\r\n  const handleSummarize = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n    setSummary('');\r\n\r\n    try {\r\n      if (!text.trim()) throw new Error('Please enter text to summarize');\r\n      if (wordCount < 10) throw new Error('Enter at least 10 words');\r\n\r\n      const response = await axios.post('/summarize', { text });\r\n      \r\n      if (!response.data?.summary) {\r\n        throw new Error('No summary received');\r\n      }\r\n\r\n      setSummary(response.data.summary);\r\n    } catch (err) {\r\n      const errorMsg = err.response?.data?.error || \r\n                      err.message || \r\n                      'Failed to generate summary';\r\n      setError(errorMsg);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"summarizer-container\">\r\n      <h1>AI Study Partner</h1>\r\n      <form onSubmit={handleSummarize}>\r\n        <textarea\r\n          rows={10}\r\n          value={text}\r\n          onChange={handleTextChange}\r\n          placeholder=\"Enter text to summarize (minimum 10 words)...\"\r\n          disabled={loading}\r\n        />\r\n        <div className=\"word-count\">Words: {wordCount}</div>\r\n        <button \r\n          type=\"submit\" \r\n          disabled={loading || wordCount < 10}\r\n        >\r\n          {loading ? 'Summarizing...' : 'Summarize'}\r\n        </button>\r\n      </form>\r\n\r\n      {error && <div className=\"error\">{error}</div>}\r\n      {summary && (\r\n        <div className=\"summary-result\">\r\n          <h2>Summary:</h2>\r\n          <p>{summary}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Summarizer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}